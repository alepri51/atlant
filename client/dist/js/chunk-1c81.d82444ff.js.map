{"version":3,"sources":["webpack:///./src/components/class_base.js","webpack:///./src/components/modals/class_modal.js"],"names":["__webpack_exports__","[object Object]","entity","id","this","$options","_componentTag","split","loaded","events","component_name","component_id","$store","state","route","watch","auth.signed","val","old","methods","args","_actions","execute","commit","name","computed","entities","auth","signed","BASE_URL","extends","_class_base__WEBPACK_IMPORTED_MODULE_0__","form","options","defaults","data","validated","remove","$refs","validate","headers","beforeSave","blob","FormData","content-type","Object","keys","reduce","memo","key","has","set","append","method","endpoint","payload","callback","response","error","$emit","_id","deleted","onSubmit","text","visible","modal_data","modals","JSON","parse","stringify","length","default"],"mappings":"0HACAA,EAAA,YACAC,OACA,IAAAC,EAAAC,GAAAC,KAAAC,SAAAC,cAAAC,MAAA,KAEA,OACAC,QAAA,EACAC,UACAP,SACAQ,eAAAN,KAAAC,SAAAC,cACAK,aAAAR,GAAAC,KAAAQ,OAAAC,MAAAC,MAAAX,KAGAF,kBAgBAc,OACAC,cAAA,SAAAC,EAAAC,MAMAC,SACAlB,WAAAmB,GACA,OAAAhB,KAAAQ,OAAAS,SAAAC,QAAA,MAAAF,IAEAnB,UAAAmB,GACA,OAAAhB,KAAAQ,OAAAW,UAAAH,IAEAnB,kBAAAuB,GACApB,KAAAmB,OAAA,qBAAAC,KAGAC,UACAxB,QACA,OAAAG,KAAAQ,OAAAC,OAEAZ,WACA,OAAAG,KAAAQ,OAAAC,MAAAa,UAEAzB,OACA,OAAAG,KAAAS,MAAAc,UAEA1B,gBAEA,QAAAG,KAAAuB,OAAAvB,KAAAuB,KAAAC,QAAA,IAAAxB,KAAAuB,KAAAC,SAEA3B,QACA,OAAAG,KAAAS,MAAAC,OAEAb,WACA,OAAAG,KAAAS,MAAAgB,wEC/DA7B,EAAA,YACA8B,QAAAC,EAAA,WACA9B,OACA,OACA+B,QACAC,WACAC,cAGAT,YAEAN,SACAlB,WAAAkC,GACA,OAAAA,GAEAlC,SAEA,IAAAmC,EAAAhC,KAAA6B,QAAAI,QAAAjC,KAAAkC,MAAAN,MAAA5B,KAAAkC,MAAAN,KAAAO,aAAAnC,KAAAkC,MAAAN,KAEAQ,KACAL,OAAA,EAEA/B,KAAA4B,KAAA5B,KAAAqC,WAAArC,KAAA4B,MAEA5B,KAAA4B,KAAAU,gBAAAC,WACAH,GACAI,eAAA,uBAGAT,EAAAU,OAAAC,KAAA1C,KAAA4B,MAAAe,OAAA,CAAAC,EAAAC,KAGA,MAFA,SAAAA,GAAAD,EAAAE,IAAAD,GAAAD,EAAAG,IAAAF,EAAA7C,KAAA4B,KAAAiB,IAAAD,EAAAI,OAAAH,EAAA7C,KAAA4B,KAAAiB,IAEAD,GACiB5C,KAAA4B,KAAAU,OAIjBN,EACAhC,KAAAkB,SACA+B,OAAAjD,KAAA6B,QAAAI,OAAA,gBACAG,UACAc,YAAiClD,KAAAF,cACjCqD,QAAApB,GAAA/B,KAAA4B,KACAwB,SAAAC,IACAA,EAAAC,QACAtD,KAAAmB,OAAA,cAAuDtB,CAAAG,KAAAF,aAAA,IACvDE,KAAA6B,QAAAI,QAAAjC,KAAAuD,MAAA,UAAAvD,KAAA4B,KAAA4B,MACAxD,KAAA4B,KAAA4B,KAAAxD,KAAAuD,MAAA,WAAAvD,KAAA4B,KAAA4B,KAEAxD,KAAAkC,MAAAN,MAAA5B,KAAAmB,OAAA,iBAA6EG,SAAA+B,EAAA/B,SAAAxB,OAAAE,KAAAF,OAAAC,GAAAC,KAAA4B,KAAA4B,IAAAC,QAAAzD,KAAA6B,QAAAI,SAE7EjC,KAAA4B,QAEA5B,KAAA0D,UAAA1D,KAAA0D,eAKA1D,KAAAmB,OAAA,iBAA8CwC,KAAA,kCAG9CtC,UACAuC,SACA/D,MAEA,IAAqBkC,KAAA8B,EAAAhC,cAAiC7B,KAAAS,MAAAqD,OAAA9D,KAAAF,UAAsCiC,UAAA,EAAAF,aAAA,GAC5F7B,KAAA6B,UAEA,IAAAC,EAAAiC,KAAAC,MAAAD,KAAAE,UAAAjE,KAAA8B,eAOA,OAJA+B,SAA4C/B,KAAA+B,GAC5C7D,KAAA4B,KAAAa,OAAAC,KAAA1C,KAAA4B,MAAAsC,OAAAlE,KAAA4B,KAAAmC,KAAAC,MAAAD,KAAAE,UAAAJ,GAAA/B,MAGA+B,GAOAd,IAAA,SAGAlD,YAMAc,OACAiD,QAAA,SAAA/C,GACAA,IAAAb,KAAA8B,SAAA9B,KAAAsB,SAAA6C,SAAAnE,KAAAsB,SAAA6C,QAAAnE,KAAAF","file":"js/chunk-1c81.d82444ff.js","sourcesContent":["\r\nexport default {\r\n    data() {\r\n        let [entity, id] = this.$options._componentTag.split('_');\r\n\r\n        return {\r\n            loaded: false,\r\n            events: {},\r\n            entity,\r\n            component_name: this.$options._componentTag,\r\n            component_id: id || this.$store.state.route.id\r\n        }\r\n    },\r\n    async created() {\r\n\r\n        /* if(this.auth.member) {\r\n            //console.log('REGISTER EVENT:', `${this.auth.member}:update:${this.entity}`);\r\n\r\n            this.$socket.off(this.events.update);\r\n\r\n            let update = this.$socket.on(`${this.auth.member}:update:${this.entity}`, (data) => {\r\n                //console.log('SOCKET UPDATE DATA:', data);\r\n                \r\n                this.commit('SET_ENTITIES', { method: 'GET', ...data });\r\n            });\r\n\r\n            this.events.update = update.id;\r\n        } */\r\n    },\r\n    watch: {\r\n        'auth.signed': function(val, old) {\r\n            //[0, 1].includes(val) && this.commit('RESET_CACHE');\r\n            //val === 0 && this.commit('RESET_ENTITIES');\r\n            //old === 0 && val === 1 && this.commit('RESET_ENTITIES');\r\n        }\r\n    },\r\n    methods: {\r\n        execute(...args) {\r\n            return this.$store._actions.execute[0](...args);\r\n        },\r\n        commit(...args) {\r\n            return this.$store.commit(...args);\r\n        },\r\n        registerComponent(name) {\r\n            this.commit('REGISTER_COMPONENT', name);\r\n        }\r\n    },\r\n    computed: {\r\n        state() {\r\n            return this.$store.state;\r\n        },\r\n        entities() {\r\n            return this.$store.state.entities;\r\n        },\r\n        auth() {\r\n            return this.state.auth || {};\r\n        },\r\n        authenticated() {\r\n            //debugger;\r\n            return this.auth ? this.auth.signed && this.auth.signed !== 0 : false;\r\n        },\r\n        route() {\r\n            return this.state.route;\r\n        },\r\n        BASE_URL() {\r\n            return this.state.BASE_URL;\r\n        }\r\n    }\r\n}\r\n\r\n","import Base from '../class_base';\r\n\r\nexport default {\r\n    extends: Base,\r\n    data() {\r\n        return {\r\n            form: {},\r\n            options: {},\r\n            defaults: {}\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        beforeSave(data) {\r\n            return data;\r\n        },        \r\n        submit() {\r\n            debugger\r\n            let validated = this.options.remove || (this.$refs.form && this.$refs.form.validate()) || !this.$refs.form;\r\n\r\n            let headers = {};\r\n            let data = void 0;\r\n\r\n            this.form = this.beforeSave(this.form);\r\n\r\n            if(this.form.blob instanceof FormData) {\r\n                headers = {\r\n                    'content-type': 'multipart/form-data'\r\n                };\r\n\r\n                data = Object.keys(this.form).reduce((memo, key) => {\r\n                    key !== 'blob' && memo.has(key) ? memo.set(key, this.form[key]) : memo.append(key, this.form[key]);\r\n\r\n                    return memo;\r\n                }, this.form.blob);\r\n            }\r\n\r\n\r\n            validated ? \r\n                this.execute({ \r\n                    method: this.options.remove ? 'delete' : 'post',\r\n                    headers,\r\n                    endpoint: `${this.entity}.save`,\r\n                    payload: data || this.form, \r\n                    callback: (response) => {\r\n                        if(!response.error) {\r\n                            this.commit('HIDE_MODAL', { [this.entity]: void 0 });\r\n                            this.options.remove && this.$emit('removed', this.form._id);\r\n                            !this.form._id && this.$emit('appended', this.form._id);\r\n\r\n                            this.$refs.form && this.commit('MUTATE_ENTITY', { entities: response.entities, entity: this.entity, id: this.form._id, deleted: this.options.remove });\r\n                            //this.commit('MUTATE_ENTITY', { entities: response.entities, entity: this.entity, id: this.form._id, deleted: this.options.remove });\r\n                            this.form = {};\r\n                            \r\n                            this.onSubmit && this.onSubmit();\r\n                        }\r\n                    }\r\n                })\r\n                :\r\n                this.commit('SHOW_SNACKBAR', {text: 'Не корректно введены данные' });\r\n        }\r\n    },\r\n    computed: {\r\n        visible: { \r\n            get() {\r\n                //debugger\r\n                let { data: modal_data, options = {} } = this.state.modals[this.entity] || { data: void 0, options: void 0 };\r\n                this.options = options;\r\n\r\n                let defaults = JSON.parse(JSON.stringify(this.defaults || {}));\r\n\r\n                //modal_data = modal_data || {};\r\n                modal_data = modal_data && {...defaults, ...modal_data};\r\n                this.form = Object.keys(this.form).length ? this.form : JSON.parse(JSON.stringify(modal_data || defaults));\r\n\r\n                //return !!Object.keys(modal_data).length;\r\n                return !!modal_data;\r\n\r\n                //typeof modal_data === 'object' && (Object.keys(modal_data).length ? this.form = JSON.parse(JSON.stringify(modal_data)) : this.form = JSON.parse(JSON.stringify(this.defaults || {})));\r\n                \r\n                //return !!modal_data;\r\n                //return false\r\n            },\r\n            set: () => {}\r\n        },\r\n    },\r\n    created() {\r\n        ////console.log('CREATED', this.entity);\r\n        //this.load();\r\n        //debugger\r\n        \r\n    },\r\n    watch: {\r\n        'visible': function(val) {\r\n            val && (this.defaults = this.entities.default && this.entities.default[this.entity] || {});\r\n        }\r\n    }\r\n}"],"sourceRoot":""}