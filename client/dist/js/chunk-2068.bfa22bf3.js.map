{"version":3,"sources":["webpack:///./src/components/modals/signout.vue?4c4b","webpack:///src/components/modals/signout.vue","webpack:///./src/components/modals/signout.vue?fdd1","webpack:///./src/components/modals/signout.vue","webpack:///./src/components/modals/class_modal.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","persistent","max-width","model","value","callback","$$v","visible","expression","staticClass","_v","color","flat","nativeOn","click","$event","commit","signout","dark","submit","staticRenderFns","signoutvue_type_script_lang_js_","extends","class_modal","data","methods","[object Object]","execute","method","endpoint","entity","modals_signoutvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","_class_base__WEBPACK_IMPORTED_MODULE_0__","form","defaults","computed","validated","remove","$refs","validate","headers","beforeSave","blob","FormData","content-type","keys","reduce","memo","key","has","set","append","payload","response","error","$emit","_id","entities","id","deleted","onSubmit","text","modal_data","state","modals","JSON","parse","stringify","length","watch","val","default"],"mappings":"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","file":"js/chunk-2068.bfa22bf3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"500px\"},model:{value:(_vm.visible),callback:function ($$v) {_vm.visible=$$v},expression:\"visible\"}},[_c('v-card',[_c('v-card-title',[_c('v-icon',{staticClass:\"mr-1 primary--text shadow\"},[_vm._v(\"fas fa-user-circle\")]),_c('span',{staticClass:\"headline primary--text\"},[_vm._v(\"Выход\")])],1),_c('v-card-text',[_c('v-card-text',[_vm._v(\"\\n                Вы покидаете личный кабинет. Пожалуйста подтвердите Ваше решение\\n            \")])],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"unimportant\",\"flat\":\"\"},nativeOn:{\"click\":function($event){_vm.commit('HIDE_MODAL', { signout: void 0 })}}},[_vm._v(\"Не выходить\")]),_c('v-btn',{attrs:{\"dark\":\"\",\"color\":\"secondary\"},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"Выйти\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog v-model=\"visible\" persistent max-width=\"500px\">\r\n        <v-card>\r\n            <v-card-title>\r\n                <v-icon class=\"mr-1 primary--text shadow\">fas fa-user-circle</v-icon>\r\n                <span class=\"headline primary--text\">Выход</span>\r\n            </v-card-title>\r\n            <v-card-text>\r\n                <v-card-text>\r\n                    Вы покидаете личный кабинет. Пожалуйста подтвердите Ваше решение\r\n                </v-card-text>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn color=\"unimportant\" flat @click.native=\"commit('HIDE_MODAL', { signout: void 0 })\">Не выходить</v-btn>\r\n                <v-btn dark color=\"secondary\" @click.native=\"submit\">Выйти</v-btn>\r\n            </v-card-actions>\r\n\r\n        </v-card>\r\n\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\n    import Modal from './class_modal';\r\n    \r\n    export default {\r\n        extends: Modal,\r\n        data: () => {\r\n            return {\r\n                //entity: 'signout'\r\n            }\r\n        },\r\n        methods: {\r\n            submit() {\r\n                this.execute({ \r\n                    method: 'post', \r\n                    endpoint: 'signout.submit',\r\n                    callback: () => {\r\n                        \r\n                        this.commit('HIDE_MODAL', { [this.entity]: void 0 });\r\n                        \r\n                        //this.$router.replace('landing');\r\n                    }    \r\n                });\r\n            }\r\n        }\r\n    }    \r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./signout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./signout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./signout.vue?vue&type=template&id=03932b70&\"\nimport script from \"./signout.vue?vue&type=script&lang=js&\"\nexport * from \"./signout.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"signout.vue\"\nexport default component.exports","import Base from '../class_base';\r\n\r\nexport default {\r\n    extends: Base,\r\n    data() {\r\n        return {\r\n            form: {},\r\n            options: {},\r\n            defaults: {}\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        beforeSave(data) {\r\n            return data;\r\n        },        \r\n        submit() {\r\n            debugger\r\n            let validated = this.options.remove || (this.$refs.form && this.$refs.form.validate()) || !this.$refs.form;\r\n\r\n            let headers = {};\r\n            let data = void 0;\r\n\r\n            this.form = this.beforeSave(this.form);\r\n\r\n            if(this.form.blob instanceof FormData) {\r\n                headers = {\r\n                    'content-type': 'multipart/form-data'\r\n                };\r\n\r\n                data = Object.keys(this.form).reduce((memo, key) => {\r\n                    key !== 'blob' && memo.has(key) ? memo.set(key, this.form[key]) : memo.append(key, this.form[key]);\r\n\r\n                    return memo;\r\n                }, this.form.blob);\r\n            }\r\n\r\n\r\n            validated ? \r\n                this.execute({ \r\n                    method: this.options.remove ? 'delete' : 'post',\r\n                    headers,\r\n                    endpoint: `${this.entity}.save`,\r\n                    payload: data || this.form, \r\n                    callback: (response) => {\r\n                        if(!response.error) {\r\n                            this.commit('HIDE_MODAL', { [this.entity]: void 0 });\r\n                            this.options.remove && this.$emit('removed', this.form._id);\r\n                            !this.form._id && this.$emit('appended', this.form._id);\r\n\r\n                            this.$refs.form && this.commit('MUTATE_ENTITY', { entities: response.entities, entity: this.entity, id: this.form._id, deleted: this.options.remove });\r\n                            //this.commit('MUTATE_ENTITY', { entities: response.entities, entity: this.entity, id: this.form._id, deleted: this.options.remove });\r\n                            this.form = {};\r\n                            \r\n                            this.onSubmit && this.onSubmit();\r\n                        }\r\n                    }\r\n                })\r\n                :\r\n                this.commit('SHOW_SNACKBAR', {text: 'Не корректно введены данные' });\r\n        }\r\n    },\r\n    computed: {\r\n        visible: { \r\n            get() {\r\n                //debugger\r\n                let { data: modal_data, options = {} } = this.state.modals[this.entity] || { data: void 0, options: void 0 };\r\n                this.options = options;\r\n\r\n                let defaults = JSON.parse(JSON.stringify(this.defaults || {}));\r\n\r\n                //modal_data = modal_data || {};\r\n                modal_data = modal_data && {...defaults, ...modal_data};\r\n                this.form = Object.keys(this.form).length ? this.form : JSON.parse(JSON.stringify(modal_data || defaults));\r\n\r\n                //return !!Object.keys(modal_data).length;\r\n                return !!modal_data;\r\n\r\n                //typeof modal_data === 'object' && (Object.keys(modal_data).length ? this.form = JSON.parse(JSON.stringify(modal_data)) : this.form = JSON.parse(JSON.stringify(this.defaults || {})));\r\n                \r\n                //return !!modal_data;\r\n                //return false\r\n            },\r\n            set: () => {}\r\n        },\r\n    },\r\n    created() {\r\n        ////console.log('CREATED', this.entity);\r\n        //this.load();\r\n        //debugger\r\n        \r\n    },\r\n    watch: {\r\n        'visible': function(val) {\r\n            val && (this.defaults = this.entities.default && this.entities.default[this.entity] || {});\r\n        }\r\n    }\r\n}"],"sourceRoot":""}