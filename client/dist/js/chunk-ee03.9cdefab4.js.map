{"version":3,"sources":["webpack:///./src/components/modals/signup.vue?508c","webpack:///src/components/modals/signup.vue","webpack:///./src/components/modals/signup.vue?347a","webpack:///./src/components/modals/signup.vue","webpack:///./src/components/class_base.js","webpack:///./src/components/modals/class_modal.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","persistent","max-width","model","value","callback","$$v","visible","expression","staticClass","_v","ref","lazy-validation","on","submit","$event","preventDefault","row","wrap","label","required","autofocus","color","rules","referer","keyup","_k","keyCode","key","name","xs12","address","email","type","password","flat","nativeOn","click","commit","signup","dark","staticRenderFns","signupvue_type_script_lang_js_","extends","class_modal","[object Object]","state","path_query","methods","$refs","form","validate","execute","method","endpoint","payload","$data","response","error","text","modals_signupvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","entity","id","$options","_componentTag","split","loaded","events","component_name","component_id","$store","route","watch","auth.signed","val","old","args","_actions","computed","entities","auth","signed","BASE_URL","_class_base__WEBPACK_IMPORTED_MODULE_0__","defaults","data","validated","remove","headers","beforeSave","blob","FormData","content-type","keys","reduce","memo","has","set","append","$emit","_id","deleted","onSubmit","modal_data","modals","JSON","parse","stringify","length","default"],"mappings":"oJAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,YAAsBE,OAAOC,WAAA,GAAAC,YAAA,SAAoCC,OAAQC,MAAAV,EAAA,QAAAW,SAAA,SAAAC,GAA6CZ,EAAAa,QAAAD,GAAgBE,WAAA,aAAuBV,EAAA,UAAAA,EAAA,gBAAAA,EAAA,UAA+CW,YAAA,8BAAwCf,EAAAgB,GAAA,wBAAAZ,EAAA,QAA4CW,YAAA,2BAAqCf,EAAAgB,GAAA,qBAAAZ,EAAA,eAAAA,EAAA,eAAAA,EAAA,UAA+Ea,IAAA,OAAAF,YAAA,OAAAT,OAAqCY,kBAAA,IAAqBC,IAAKC,OAAA,SAAAC,GAA0BA,EAAAC,qBAA2BlB,EAAA,YAAiBE,OAAOiB,IAAA,GAAAC,KAAA,MAAoBpB,EAAA,gBAAqBW,YAAA,OAAAT,OAA0BmB,MAAA,UAAAC,SAAA,GAAAC,UAAA,GAAAC,MAAA,UAAAC,OAC5rB,WAAyD,QAAA7B,EAAA8B,SAAA,4BAAuDX,IAAKY,MAAA,SAAAV,GAAyB,iBAAAA,IAAArB,EAAAgC,GAAAX,EAAAY,QAAA,WAAAZ,EAAAa,IAAA,SAA+FlC,EAAAoB,OAAAC,GAAf,OAA0CZ,OAAQC,MAAAV,EAAA,QAAAW,SAAA,SAAAC,GAA6CZ,EAAA8B,QAAAlB,GAAgBE,WAAA,aAAuBV,EAAA,gBAAqBW,YAAA,OAAAT,OAA0BmB,MAAA,OAAAC,SAAA,GAAAE,MAAA,UAAAC,OACnZ,WAAyD,QAAA7B,EAAAmC,MAAA,4BAAoDhB,IAAKY,MAAA,SAAAV,GAAyB,iBAAAA,IAAArB,EAAAgC,GAAAX,EAAAY,QAAA,WAAAZ,EAAAa,IAAA,SAA+FlC,EAAAoB,OAAAC,GAAf,OAA0CZ,OAAQC,MAAAV,EAAA,KAAAW,SAAA,SAAAC,GAA0CZ,EAAAmC,KAAAvB,GAAaE,WAAA,UAAoBV,EAAA,UAAeE,OAAO8B,KAAA,MAAWhC,EAAA,gBAAqBE,OAAOmB,MAAA,SAAAC,SAAA,GAAAE,MAAA,UAAAC,OACrZ,WAA6D,QAAA7B,EAAAqC,SAAA,4BAAuDlB,IAAKY,MAAA,SAAAV,GAAyB,iBAAAA,IAAArB,EAAAgC,GAAAX,EAAAY,QAAA,WAAAZ,EAAAa,IAAA,SAA+FlC,EAAAoB,OAAAC,GAAf,OAA0CZ,OAAQC,MAAAV,EAAA,QAAAW,SAAA,SAAAC,GAA6CZ,EAAAqC,QAAAzB,GAAgBE,WAAA,cAAuB,GAAAV,EAAA,gBAAyBW,YAAA,OAAAT,OAA0BmB,MAAA,QAAAC,SAAA,GAAAE,MAAA,UAAAC,OAC3Z,WAAyD,QAAA7B,EAAAsC,OAAA,4BAAqDnB,IAAKY,MAAA,SAAAV,GAAyB,iBAAAA,IAAArB,EAAAgC,GAAAX,EAAAY,QAAA,WAAAZ,EAAAa,IAAA,SAA+FlC,EAAAoB,OAAAC,GAAf,OAA0CZ,OAAQC,MAAAV,EAAA,MAAAW,SAAA,SAAAC,GAA2CZ,EAAAsC,MAAA1B,GAAcE,WAAA,WAAqBV,EAAA,gBAAqBW,YAAA,OAAAT,OAA0BmB,MAAA,WAAAc,KAAA,WAAAb,SAAA,GAAAE,MAAA,UAAAC,OAC3Y,WAAyD,QAAA7B,EAAAwC,UAAA,4BAAwDrB,IAAKY,MAAA,SAAAV,GAAyB,iBAAAA,IAAArB,EAAAgC,GAAAX,EAAAY,QAAA,WAAAZ,EAAAa,IAAA,SAA+FlC,EAAAoB,OAAAC,GAAf,OAA0CZ,OAAQC,MAAAV,EAAA,SAAAW,SAAA,SAAAC,GAA8CZ,EAAAwC,SAAA5B,GAAiBE,WAAA,eAAwB,OAAAV,EAAA,SAAAJ,EAAAgB,GAAA,uCAAAZ,EAAA,kBAAAA,EAAA,YAAAA,EAAA,SAAoHE,OAAOsB,MAAA,cAAAa,KAAA,IAAgCC,UAAWC,MAAA,SAAAtB,GAAyBrB,EAAA4C,OAAA,cAA0BC,YAAA,QAAqB7C,EAAAgB,GAAA,cAAAZ,EAAA,SAAmCE,OAAOwC,KAAA,GAAAlB,MAAA,aAA8Bc,UAAWC,MAAA,SAAAtB,GAAyB,OAAArB,EAAAoB,OAAAC,OAA4BrB,EAAAgB,GAAA,qCAC9tB+B,iBC6EAC,GACAC,QAAAC,EAAA,WACAC,OACA,OAEArB,QAAA,GACAK,KAAA,GACAG,MAAA,GACAE,SAAA,GACAH,QAAA,KAGAc,UAEAlD,KAAA6B,QAAA7B,KAAAmD,MAAAC,WAAApC,KAEAqC,SACAH,SAGAlD,KAAAsD,MAAAC,KAAAC,WACAxD,KAAAyD,SACAC,OAAA,OACAC,SAAA,gBACAC,QAAA5D,KAAA6D,MACAnD,SAAAoD,IAEAA,EAAAC,OACA/D,KAAA2C,OAAA,cAAAC,YAAA,OAMA5C,KAAA2C,OAAA,iBAAAqB,KAAA,mCCrHqLC,EAAA,cCOrLC,EAAAC,OAAAC,EAAA,KAAAD,CACAF,EACAnE,EACAgD,GACA,EACA,KACA,KACA,MAIAoB,EAAAG,QAAAC,OAAA,aACAC,EAAA,WAAAL,oDClBAK,EAAA,YACArB,OACA,IAAAsB,EAAAC,GAAAzE,KAAA0E,SAAAC,cAAAC,MAAA,KAEA,OACAC,QAAA,EACAC,UACAN,SACAO,eAAA/E,KAAA0E,SAAAC,cACAK,aAAAP,GAAAzE,KAAAiF,OAAA9B,MAAA+B,MAAAT,KAGAvB,kBAgBAiC,OACAC,cAAA,SAAAC,EAAAC,MAMAjC,SACAH,WAAAqC,GACA,OAAAvF,KAAAiF,OAAAO,SAAA/B,QAAA,MAAA8B,IAEArC,UAAAqC,GACA,OAAAvF,KAAAiF,OAAAtC,UAAA4C,IAEArC,kBAAAhB,GACAlC,KAAA2C,OAAA,qBAAAT,KAGAuD,UACAvC,QACA,OAAAlD,KAAAiF,OAAA9B,OAEAD,WACA,OAAAlD,KAAAiF,OAAA9B,MAAAuC,UAEAxC,OACA,OAAAlD,KAAAmD,MAAAwC,UAEAzC,gBAEA,QAAAlD,KAAA2F,OAAA3F,KAAA2F,KAAAC,QAAA,IAAA5F,KAAA2F,KAAAC,SAEA1C,QACA,OAAAlD,KAAAmD,MAAA+B,OAEAhC,WACA,OAAAlD,KAAAmD,MAAA0C,wEC/DAtB,EAAA,YACAvB,QAAA8C,EAAA,WACA5C,OACA,OACAK,QACAc,WACA0B,cAGAN,YAEApC,SACAH,WAAA8C,GACA,OAAAA,GAEA9C,SAEA,IAAA+C,EAAAjG,KAAAqE,QAAA6B,QAAAlG,KAAAsD,MAAAC,MAAAvD,KAAAsD,MAAAC,KAAAC,aAAAxD,KAAAsD,MAAAC,KAEA4C,KACAH,OAAA,EAEAhG,KAAAuD,KAAAvD,KAAAoG,WAAApG,KAAAuD,MAEAvD,KAAAuD,KAAA8C,gBAAAC,WACAH,GACAI,eAAA,uBAGAP,EAAA7B,OAAAqC,KAAAxG,KAAAuD,MAAAkD,OAAA,CAAAC,EAAAzE,KAGA,MAFA,SAAAA,GAAAyE,EAAAC,IAAA1E,GAAAyE,EAAAE,IAAA3E,EAAAjC,KAAAuD,KAAAtB,IAAAyE,EAAAG,OAAA5E,EAAAjC,KAAAuD,KAAAtB,IAEAyE,GACiB1G,KAAAuD,KAAA8C,OAIjBJ,EACAjG,KAAAyD,SACAC,OAAA1D,KAAAqE,QAAA6B,OAAA,gBACAC,UACAxC,YAAiC3D,KAAAwE,cACjCZ,QAAAoC,GAAAhG,KAAAuD,KACA7C,SAAAoD,IACAA,EAAAC,QACA/D,KAAA2C,OAAA,cAAuDO,CAAAlD,KAAAwE,aAAA,IACvDxE,KAAAqE,QAAA6B,QAAAlG,KAAA8G,MAAA,UAAA9G,KAAAuD,KAAAwD,MACA/G,KAAAuD,KAAAwD,KAAA/G,KAAA8G,MAAA,WAAA9G,KAAAuD,KAAAwD,KAEA/G,KAAAsD,MAAAC,MAAAvD,KAAA2C,OAAA,iBAA6E+C,SAAA5B,EAAA4B,SAAAlB,OAAAxE,KAAAwE,OAAAC,GAAAzE,KAAAuD,KAAAwD,IAAAC,QAAAhH,KAAAqE,QAAA6B,SAE7ElG,KAAAuD,QAEAvD,KAAAiH,UAAAjH,KAAAiH,eAKAjH,KAAA2C,OAAA,iBAA8CqB,KAAA,kCAG9CyB,UACA7E,SACAsC,MAEA,IAAqB8C,KAAAkB,EAAA7C,cAAiCrE,KAAAmD,MAAAgE,OAAAnH,KAAAwE,UAAsCwB,UAAA,EAAA3B,aAAA,GAC5FrE,KAAAqE,UAEA,IAAA0B,EAAAqB,KAAAC,MAAAD,KAAAE,UAAAtH,KAAA+F,eAOA,OAJAmB,SAA4CnB,KAAAmB,GAC5ClH,KAAAuD,KAAAY,OAAAqC,KAAAxG,KAAAuD,MAAAgE,OAAAvH,KAAAuD,KAAA6D,KAAAC,MAAAD,KAAAE,UAAAJ,GAAAnB,MAGAmB,GAOAN,IAAA,SAGA1D,YAMAiC,OACAvE,QAAA,SAAAyE,GACAA,IAAArF,KAAA+F,SAAA/F,KAAA0F,SAAA8B,SAAAxH,KAAA0F,SAAA8B,QAAAxH,KAAAwE","file":"js/chunk-ee03.9cdefab4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"500px\"},model:{value:(_vm.visible),callback:function ($$v) {_vm.visible=$$v},expression:\"visible\"}},[_c('v-card',[_c('v-card-title',[_c('v-icon',{staticClass:\"mr-1 primary--text shadow\"},[_vm._v(\"far fa-user-circle\")]),_c('span',{staticClass:\"headline primary--text\"},[_vm._v(\"Регистрация\")])],1),_c('v-card-text',[_c('v-card-text',[_c('v-form',{ref:\"form\",staticClass:\"form\",attrs:{\"lazy-validation\":\"\"},on:{\"submit\":function($event){$event.preventDefault();}}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-text-field',{staticClass:\"ma-1\",attrs:{\"label\":\"Реферер\",\"required\":\"\",\"autofocus\":\"\",\"color\":\"primary\",\"rules\":[\n                                            function () { return !!_vm.referer || 'This field is required'; } ]},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)}},model:{value:(_vm.referer),callback:function ($$v) {_vm.referer=$$v},expression:\"referer\"}}),_c('v-text-field',{staticClass:\"ma-1\",attrs:{\"label\":\"Name\",\"required\":\"\",\"color\":\"primary\",\"rules\":[\n                                            function () { return !!_vm.name || 'This field is required'; } ]},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)}},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Wallet\",\"required\":\"\",\"color\":\"primary\",\"rules\":[\n                                                function () { return !!_vm.address || 'This field is required'; } ]},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)}},model:{value:(_vm.address),callback:function ($$v) {_vm.address=$$v},expression:\"address\"}})],1),_c('v-text-field',{staticClass:\"ma-1\",attrs:{\"label\":\"Email\",\"required\":\"\",\"color\":\"primary\",\"rules\":[\n                                            function () { return !!_vm.email || 'This field is required'; } ]},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)}},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_c('v-text-field',{staticClass:\"ma-1\",attrs:{\"label\":\"Password\",\"type\":\"password\",\"required\":\"\",\"color\":\"primary\",\"rules\":[\n                                            function () { return !!_vm.password || 'This field is required'; } ]},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.submit($event)}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}})],1)],1),_c('small',[_vm._v(\"*indicates required field\")])],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"unimportant\",\"flat\":\"\"},nativeOn:{\"click\":function($event){_vm.commit('HIDE_MODAL', { signup: void 0 })}}},[_vm._v(\"Отменить\")]),_c('v-btn',{attrs:{\"dark\":\"\",\"color\":\"secondary\"},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"Зарегистрироваться\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog v-model=\"visible\" persistent max-width=\"500px\">\r\n        <v-card>\r\n            <v-card-title>\r\n                <v-icon class=\"mr-1 primary--text shadow\">far fa-user-circle</v-icon>\r\n                <span class=\"headline primary--text\">Регистрация</span>\r\n            </v-card-title>\r\n            <v-card-text>\r\n                <v-card-text>\r\n                    <v-form ref=\"form\" class=\"form\" lazy-validation @submit.prevent>\r\n                        <v-layout row wrap>\r\n                            <v-text-field v-model=\"referer\"\r\n                                            label=\"Реферер\"\r\n                                            required\r\n                                            autofocus\r\n                                            color=\"primary\"\r\n                                            :rules=\"[\r\n                                                () => !!referer || 'This field is required',\r\n                                            ]\"\r\n                                            @keyup.enter=\"submit\"\r\n                                            class=\"ma-1\"\r\n                            ></v-text-field>\r\n                            <v-text-field v-model=\"name\"\r\n                                            label=\"Name\"\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            :rules=\"[\r\n                                                () => !!name || 'This field is required',\r\n                                            ]\"\r\n                                            @keyup.enter=\"submit\"\r\n                                            class=\"ma-1\"\r\n                            ></v-text-field>\r\n                            <v-flex xs12>\r\n                                <v-text-field v-model=\"address\"\r\n                                                label=\"Wallet\"\r\n                                                required\r\n                                                color=\"primary\"\r\n                                                :rules=\"[\r\n                                                    () => !!address || 'This field is required',\r\n                                                ]\"\r\n                                                @keyup.enter=\"submit\"\r\n                                ></v-text-field>\r\n                            </v-flex>\r\n                            <v-text-field v-model=\"email\"\r\n                                            label=\"Email\"\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            :rules=\"[\r\n                                                () => !!email || 'This field is required',\r\n                                            ]\"\r\n                                            @keyup.enter=\"submit\"\r\n                                            class=\"ma-1\"\r\n                            ></v-text-field>\r\n                            <v-text-field v-model=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            :rules=\"[\r\n                                                () => !!password || 'This field is required',\r\n                                            ]\"\r\n                                            @keyup.enter=\"submit\"\r\n                                            class=\"ma-1\"\r\n                            ></v-text-field>\r\n                        </v-layout>\r\n                    </v-form>\r\n                    <small>*indicates required field</small>\r\n                </v-card-text>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn color=\"unimportant\" flat @click.native=\"commit('HIDE_MODAL', { signup: void 0 })\">Отменить</v-btn>\r\n                <v-btn dark color=\"secondary\" @click.native=\"submit\">Зарегистрироваться</v-btn>\r\n            </v-card-actions>\r\n\r\n        </v-card>\r\n\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\n    import Modal from './class_modal';\r\n    \r\n    export default {\r\n        extends: Modal,\r\n        data() {\r\n            return {\r\n                //entity: 'signup',\r\n                referer: '',\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                address: ''\r\n            }\r\n        },\r\n        created() {\r\n            //debugger\r\n            this.referer = this.state.path_query.ref;\r\n        },\r\n        methods: {\r\n            submit() {\r\n                //this.$data.referer = this.$store.state.referer;\r\n\r\n                this.$refs.form.validate() ? \r\n                    this.execute({ \r\n                        method: 'post', \r\n                        endpoint: 'signup.submit', \r\n                        payload: this.$data, \r\n                        callback: (response) => {\r\n                            //debugger;\r\n                            if(!response.error) {\r\n                                this.commit('HIDE_MODAL', { signup: void 0 });\r\n                                //this.$router.replace('newslayout');\r\n                            }\r\n                        }\r\n                    })\r\n                    :\r\n                    this.commit('SHOW_SNACKBAR', {text: 'Не корректно введены данные' });\r\n            }\r\n        }\r\n    }    \r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./signup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./signup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./signup.vue?vue&type=template&id=65565abf&\"\nimport script from \"./signup.vue?vue&type=script&lang=js&\"\nexport * from \"./signup.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"signup.vue\"\nexport default component.exports","\r\nexport default {\r\n    data() {\r\n        let [entity, id] = this.$options._componentTag.split('_');\r\n\r\n        return {\r\n            loaded: false,\r\n            events: {},\r\n            entity,\r\n            component_name: this.$options._componentTag,\r\n            component_id: id || this.$store.state.route.id\r\n        }\r\n    },\r\n    async created() {\r\n\r\n        /* if(this.auth.member) {\r\n            //console.log('REGISTER EVENT:', `${this.auth.member}:update:${this.entity}`);\r\n\r\n            this.$socket.off(this.events.update);\r\n\r\n            let update = this.$socket.on(`${this.auth.member}:update:${this.entity}`, (data) => {\r\n                //console.log('SOCKET UPDATE DATA:', data);\r\n                \r\n                this.commit('SET_ENTITIES', { method: 'GET', ...data });\r\n            });\r\n\r\n            this.events.update = update.id;\r\n        } */\r\n    },\r\n    watch: {\r\n        'auth.signed': function(val, old) {\r\n            //[0, 1].includes(val) && this.commit('RESET_CACHE');\r\n            //val === 0 && this.commit('RESET_ENTITIES');\r\n            //old === 0 && val === 1 && this.commit('RESET_ENTITIES');\r\n        }\r\n    },\r\n    methods: {\r\n        execute(...args) {\r\n            return this.$store._actions.execute[0](...args);\r\n        },\r\n        commit(...args) {\r\n            return this.$store.commit(...args);\r\n        },\r\n        registerComponent(name) {\r\n            this.commit('REGISTER_COMPONENT', name);\r\n        }\r\n    },\r\n    computed: {\r\n        state() {\r\n            return this.$store.state;\r\n        },\r\n        entities() {\r\n            return this.$store.state.entities;\r\n        },\r\n        auth() {\r\n            return this.state.auth || {};\r\n        },\r\n        authenticated() {\r\n            //debugger;\r\n            return this.auth ? this.auth.signed && this.auth.signed !== 0 : false;\r\n        },\r\n        route() {\r\n            return this.state.route;\r\n        },\r\n        BASE_URL() {\r\n            return this.state.BASE_URL;\r\n        }\r\n    }\r\n}\r\n\r\n","import Base from '../class_base';\r\n\r\nexport default {\r\n    extends: Base,\r\n    data() {\r\n        return {\r\n            form: {},\r\n            options: {},\r\n            defaults: {}\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        beforeSave(data) {\r\n            return data;\r\n        },        \r\n        submit() {\r\n            debugger\r\n            let validated = this.options.remove || (this.$refs.form && this.$refs.form.validate()) || !this.$refs.form;\r\n\r\n            let headers = {};\r\n            let data = void 0;\r\n\r\n            this.form = this.beforeSave(this.form);\r\n\r\n            if(this.form.blob instanceof FormData) {\r\n                headers = {\r\n                    'content-type': 'multipart/form-data'\r\n                };\r\n\r\n                data = Object.keys(this.form).reduce((memo, key) => {\r\n                    key !== 'blob' && memo.has(key) ? memo.set(key, this.form[key]) : memo.append(key, this.form[key]);\r\n\r\n                    return memo;\r\n                }, this.form.blob);\r\n            }\r\n\r\n\r\n            validated ? \r\n                this.execute({ \r\n                    method: this.options.remove ? 'delete' : 'post',\r\n                    headers,\r\n                    endpoint: `${this.entity}.save`,\r\n                    payload: data || this.form, \r\n                    callback: (response) => {\r\n                        if(!response.error) {\r\n                            this.commit('HIDE_MODAL', { [this.entity]: void 0 });\r\n                            this.options.remove && this.$emit('removed', this.form._id);\r\n                            !this.form._id && this.$emit('appended', this.form._id);\r\n\r\n                            this.$refs.form && this.commit('MUTATE_ENTITY', { entities: response.entities, entity: this.entity, id: this.form._id, deleted: this.options.remove });\r\n                            //this.commit('MUTATE_ENTITY', { entities: response.entities, entity: this.entity, id: this.form._id, deleted: this.options.remove });\r\n                            this.form = {};\r\n                            \r\n                            this.onSubmit && this.onSubmit();\r\n                        }\r\n                    }\r\n                })\r\n                :\r\n                this.commit('SHOW_SNACKBAR', {text: 'Не корректно введены данные' });\r\n        }\r\n    },\r\n    computed: {\r\n        visible: { \r\n            get() {\r\n                //debugger\r\n                let { data: modal_data, options = {} } = this.state.modals[this.entity] || { data: void 0, options: void 0 };\r\n                this.options = options;\r\n\r\n                let defaults = JSON.parse(JSON.stringify(this.defaults || {}));\r\n\r\n                //modal_data = modal_data || {};\r\n                modal_data = modal_data && {...defaults, ...modal_data};\r\n                this.form = Object.keys(this.form).length ? this.form : JSON.parse(JSON.stringify(modal_data || defaults));\r\n\r\n                //return !!Object.keys(modal_data).length;\r\n                return !!modal_data;\r\n\r\n                //typeof modal_data === 'object' && (Object.keys(modal_data).length ? this.form = JSON.parse(JSON.stringify(modal_data)) : this.form = JSON.parse(JSON.stringify(this.defaults || {})));\r\n                \r\n                //return !!modal_data;\r\n                //return false\r\n            },\r\n            set: () => {}\r\n        },\r\n    },\r\n    created() {\r\n        ////console.log('CREATED', this.entity);\r\n        //this.load();\r\n        //debugger\r\n        \r\n    },\r\n    watch: {\r\n        'visible': function(val) {\r\n            val && (this.defaults = this.entities.default && this.entities.default[this.entity] || {});\r\n        }\r\n    }\r\n}"],"sourceRoot":""}